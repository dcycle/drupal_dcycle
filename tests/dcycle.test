<?php

/**
 * @file
 * Simpletests for dcycle
 */

module_load_include('test', 'dcycle', 'tests/dcycle_base');

if (!module_exists('dcycle')) {
  drupal_set_message(t('Some tests are not shown because dcycle is not enabled'), 'warning', FALSE);
  return;
}

class dcycleTestCase extends dcycleTestBase {
  public function setUp() {
    parent::setUp('dcycle');
    // Use our mock object for dealing with stuff like the filesystem.
    dcycle_mockable_set_type('mock');
  }

  public static function getInfo() {
    return array(
      'name' => 'dcycle functionality',
      'description' => 'Test dcycle functionality.',
      'group' => 'dcycle',
    );
  }

  public function testApi() {
    $expected = array(
      $this->randomName(),
    );
    dcycle_mockable_set('dcycle', 'dcycleMockShell', 'setDrush', $expected[0]);
    $this->assertTrue(dcycle_mockable('shell_exec', 'which drush') == $expected, 'Using our mock object, calling "which drush" on shell returns "/path/to/drush/drush" (' . serialize(dcycle_mockable('shell_exec', 'which drush')) . ').');
  }

  public function testDcycle() {
    $this->loginAdmin();
    $edit = array(
      'dcycle_policy' => 'dcycle:dcycleQuickstartPolicy',
      'dcycle_environment_type' => 'dev',
      'dcycle_project_type' => 'website',
    );
    $this->drupalPost('admin/config/development/dcycle', $edit, 'Save configuration');
    $this->assertNoText('Your deployment module is');
    $this->assertText('You must create a deployment module');
    dcycle_mockable_set('dcycle', 'dcycleMockModules', 'addModule', array(
      'name' => 'whatever',
    ));
    $this->drupalGet('admin/config/development/dcycle');
    $this->assertText('Your deployment module is');
    $this->assertNoText('You must create a deployment module');
  }
}
